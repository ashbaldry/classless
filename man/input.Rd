% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/input.R
\name{textCLInput}
\alias{textCLInput}
\alias{passwordCLInput}
\alias{textAreaCLInput}
\alias{numericCLInput}
\alias{dateCLInput}
\alias{checkboxCLInput}
\title{Inputs for Classless CSS Frameworks}
\usage{
textCLInput(input_id, label, value = "", placeholder = "")

passwordCLInput(input_id, label, value = "", placeholder = "")

textAreaCLInput(input_id, label, value = "", placeholder = "")

numericCLInput(
  input_id,
  label,
  value = "",
  min = NULL,
  max = NULL,
  placeholder = ""
)

dateCLInput(
  input_id,
  label,
  value = "",
  min = NULL,
  max = NULL,
  placeholder = ""
)

checkboxCLInput(input_id, label, value = FALSE)
}
\arguments{
\item{input_id}{The \code{input} slot that will be used to access the value.}

\item{label}{Display label for the control}

\item{value}{Initial value}

\item{placeholder}{A character string giving the user a hint as to what can be entered into the control}

\item{min}{Minimum valid value}

\item{max}{Maximum valid value}
}
\value{
An input control that can be added to a UI definition
}
\description{
As most classless frameworks focus on HTML tags rather than CSS classes, the format of inputs is generally
consistent amongst different frameworks.

Classless frameworks a lot less feature rich compared to
}
\examples{
# Text Input
textCLInput(input_id = "text", "Text Input")

# Numeric Input
numericCLInput(input_id = "numeric", "Numeric Input")

# Date Input
dateCLInput(input_id = "date", "Date Input")

}
